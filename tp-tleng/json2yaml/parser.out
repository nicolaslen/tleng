Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> elements
Rule 1     elements -> value
Rule 2     elements -> value VALUE_SEPARATOR elements
Rule 3     object -> BEGIN_OBJECT members END_OBJECT
Rule 4     object -> BEGIN_OBJECT END_OBJECT
Rule 5     members -> pair
Rule 6     members -> pair VALUE_SEPARATOR members
Rule 7     pair -> string NAME_SEPARATOR value
Rule 8     array -> BEGIN_ARRAY END_ARRAY
Rule 9     array -> BEGIN_ARRAY elements END_ARRAY
Rule 10    value -> string
Rule 11    value -> FALSE
Rule 12    value -> TRUE
Rule 13    value -> NULL
Rule 14    value -> number
Rule 15    value -> object
Rule 16    value -> array
Rule 17    integer -> DIGITS
Rule 18    integer -> MINUS DIGITS
Rule 19    number -> integer
Rule 20    number -> integer DECIMAL_POINT DIGITS
Rule 21    number -> integer E DIGITS
Rule 22    number -> integer E PLUS DIGITS
Rule 23    number -> integer E MINUS DIGITS
Rule 24    number -> integer DECIMAL_POINT DIGITS E DIGITS
Rule 25    number -> integer DECIMAL_POINT DIGITS E PLUS DIGITS
Rule 26    number -> integer DECIMAL_POINT DIGITS E MINUS DIGITS
Rule 27    string -> QUOTATION_MARK STRING QUOTATION_MARK
Rule 28    string -> QUOTATION_MARK QUOTATION_MARK

Terminals, with rules where they appear

BEGIN_ARRAY          : 8 9
BEGIN_OBJECT         : 3 4
DECIMAL_POINT        : 20 24 25 26
DIGITS               : 17 18 20 21 22 23 24 24 25 25 26 26
E                    : 21 22 23 24 25 26
END_ARRAY            : 8 9
END_OBJECT           : 3 4
FALSE                : 11
MINUS                : 18 23 26
NAME_SEPARATOR       : 7
NULL                 : 13
PLUS                 : 22 25
QUOTATION_MARK       : 27 27 28 28
STRING               : 27
TRUE                 : 12
VALUE_SEPARATOR      : 2 6
error                : 

Nonterminals, with rules where they appear

array                : 16
elements             : 2 9 0
integer              : 19 20 21 22 23 24 25 26
members              : 3 6
number               : 14
object               : 15
pair                 : 5 6
string               : 7 10
value                : 1 2 7

Parsing method: LALR

state 0

    (0) S' -> . elements
    (1) elements -> . value
    (2) elements -> . value VALUE_SEPARATOR elements
    (10) value -> . string
    (11) value -> . FALSE
    (12) value -> . TRUE
    (13) value -> . NULL
    (14) value -> . number
    (15) value -> . object
    (16) value -> . array
    (27) string -> . QUOTATION_MARK STRING QUOTATION_MARK
    (28) string -> . QUOTATION_MARK QUOTATION_MARK
    (19) number -> . integer
    (20) number -> . integer DECIMAL_POINT DIGITS
    (21) number -> . integer E DIGITS
    (22) number -> . integer E PLUS DIGITS
    (23) number -> . integer E MINUS DIGITS
    (24) number -> . integer DECIMAL_POINT DIGITS E DIGITS
    (25) number -> . integer DECIMAL_POINT DIGITS E PLUS DIGITS
    (26) number -> . integer DECIMAL_POINT DIGITS E MINUS DIGITS
    (3) object -> . BEGIN_OBJECT members END_OBJECT
    (4) object -> . BEGIN_OBJECT END_OBJECT
    (8) array -> . BEGIN_ARRAY END_ARRAY
    (9) array -> . BEGIN_ARRAY elements END_ARRAY
    (17) integer -> . DIGITS
    (18) integer -> . MINUS DIGITS

    FALSE           shift and go to state 14
    TRUE            shift and go to state 7
    NULL            shift and go to state 6
    QUOTATION_MARK  shift and go to state 4
    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2
    DIGITS          shift and go to state 9
    MINUS           shift and go to state 8

    elements                       shift and go to state 10
    string                         shift and go to state 11
    object                         shift and go to state 12
    number                         shift and go to state 3
    value                          shift and go to state 15
    integer                        shift and go to state 13
    array                          shift and go to state 5

state 1

    (3) object -> BEGIN_OBJECT . members END_OBJECT
    (4) object -> BEGIN_OBJECT . END_OBJECT
    (5) members -> . pair
    (6) members -> . pair VALUE_SEPARATOR members
    (7) pair -> . string NAME_SEPARATOR value
    (27) string -> . QUOTATION_MARK STRING QUOTATION_MARK
    (28) string -> . QUOTATION_MARK QUOTATION_MARK

    END_OBJECT      shift and go to state 16
    QUOTATION_MARK  shift and go to state 4

    pair                           shift and go to state 18
    string                         shift and go to state 19
    members                        shift and go to state 17

state 2

    (8) array -> BEGIN_ARRAY . END_ARRAY
    (9) array -> BEGIN_ARRAY . elements END_ARRAY
    (1) elements -> . value
    (2) elements -> . value VALUE_SEPARATOR elements
    (10) value -> . string
    (11) value -> . FALSE
    (12) value -> . TRUE
    (13) value -> . NULL
    (14) value -> . number
    (15) value -> . object
    (16) value -> . array
    (27) string -> . QUOTATION_MARK STRING QUOTATION_MARK
    (28) string -> . QUOTATION_MARK QUOTATION_MARK
    (19) number -> . integer
    (20) number -> . integer DECIMAL_POINT DIGITS
    (21) number -> . integer E DIGITS
    (22) number -> . integer E PLUS DIGITS
    (23) number -> . integer E MINUS DIGITS
    (24) number -> . integer DECIMAL_POINT DIGITS E DIGITS
    (25) number -> . integer DECIMAL_POINT DIGITS E PLUS DIGITS
    (26) number -> . integer DECIMAL_POINT DIGITS E MINUS DIGITS
    (3) object -> . BEGIN_OBJECT members END_OBJECT
    (4) object -> . BEGIN_OBJECT END_OBJECT
    (8) array -> . BEGIN_ARRAY END_ARRAY
    (9) array -> . BEGIN_ARRAY elements END_ARRAY
    (17) integer -> . DIGITS
    (18) integer -> . MINUS DIGITS

    END_ARRAY       shift and go to state 20
    FALSE           shift and go to state 14
    TRUE            shift and go to state 7
    NULL            shift and go to state 6
    QUOTATION_MARK  shift and go to state 4
    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2
    DIGITS          shift and go to state 9
    MINUS           shift and go to state 8

    elements                       shift and go to state 21
    string                         shift and go to state 11
    object                         shift and go to state 12
    number                         shift and go to state 3
    value                          shift and go to state 15
    integer                        shift and go to state 13
    array                          shift and go to state 5

state 3

    (14) value -> number .

    VALUE_SEPARATOR reduce using rule 14 (value -> number .)
    $end            reduce using rule 14 (value -> number .)
    END_ARRAY       reduce using rule 14 (value -> number .)
    END_OBJECT      reduce using rule 14 (value -> number .)


state 4

    (27) string -> QUOTATION_MARK . STRING QUOTATION_MARK
    (28) string -> QUOTATION_MARK . QUOTATION_MARK

    STRING          shift and go to state 23
    QUOTATION_MARK  shift and go to state 22


state 5

    (16) value -> array .

    VALUE_SEPARATOR reduce using rule 16 (value -> array .)
    $end            reduce using rule 16 (value -> array .)
    END_ARRAY       reduce using rule 16 (value -> array .)
    END_OBJECT      reduce using rule 16 (value -> array .)


state 6

    (13) value -> NULL .

    VALUE_SEPARATOR reduce using rule 13 (value -> NULL .)
    $end            reduce using rule 13 (value -> NULL .)
    END_ARRAY       reduce using rule 13 (value -> NULL .)
    END_OBJECT      reduce using rule 13 (value -> NULL .)


state 7

    (12) value -> TRUE .

    VALUE_SEPARATOR reduce using rule 12 (value -> TRUE .)
    $end            reduce using rule 12 (value -> TRUE .)
    END_ARRAY       reduce using rule 12 (value -> TRUE .)
    END_OBJECT      reduce using rule 12 (value -> TRUE .)


state 8

    (18) integer -> MINUS . DIGITS

    DIGITS          shift and go to state 24


state 9

    (17) integer -> DIGITS .

    DECIMAL_POINT   reduce using rule 17 (integer -> DIGITS .)
    E               reduce using rule 17 (integer -> DIGITS .)
    VALUE_SEPARATOR reduce using rule 17 (integer -> DIGITS .)
    $end            reduce using rule 17 (integer -> DIGITS .)
    END_OBJECT      reduce using rule 17 (integer -> DIGITS .)
    END_ARRAY       reduce using rule 17 (integer -> DIGITS .)


state 10

    (0) S' -> elements .



state 11

    (10) value -> string .

    VALUE_SEPARATOR reduce using rule 10 (value -> string .)
    $end            reduce using rule 10 (value -> string .)
    END_ARRAY       reduce using rule 10 (value -> string .)
    END_OBJECT      reduce using rule 10 (value -> string .)


state 12

    (15) value -> object .

    VALUE_SEPARATOR reduce using rule 15 (value -> object .)
    $end            reduce using rule 15 (value -> object .)
    END_ARRAY       reduce using rule 15 (value -> object .)
    END_OBJECT      reduce using rule 15 (value -> object .)


state 13

    (19) number -> integer .
    (20) number -> integer . DECIMAL_POINT DIGITS
    (21) number -> integer . E DIGITS
    (22) number -> integer . E PLUS DIGITS
    (23) number -> integer . E MINUS DIGITS
    (24) number -> integer . DECIMAL_POINT DIGITS E DIGITS
    (25) number -> integer . DECIMAL_POINT DIGITS E PLUS DIGITS
    (26) number -> integer . DECIMAL_POINT DIGITS E MINUS DIGITS

    VALUE_SEPARATOR reduce using rule 19 (number -> integer .)
    END_OBJECT      reduce using rule 19 (number -> integer .)
    END_ARRAY       reduce using rule 19 (number -> integer .)
    $end            reduce using rule 19 (number -> integer .)
    DECIMAL_POINT   shift and go to state 26
    E               shift and go to state 25


state 14

    (11) value -> FALSE .

    VALUE_SEPARATOR reduce using rule 11 (value -> FALSE .)
    $end            reduce using rule 11 (value -> FALSE .)
    END_ARRAY       reduce using rule 11 (value -> FALSE .)
    END_OBJECT      reduce using rule 11 (value -> FALSE .)


state 15

    (1) elements -> value .
    (2) elements -> value . VALUE_SEPARATOR elements

    $end            reduce using rule 1 (elements -> value .)
    END_ARRAY       reduce using rule 1 (elements -> value .)
    VALUE_SEPARATOR shift and go to state 27


state 16

    (4) object -> BEGIN_OBJECT END_OBJECT .

    VALUE_SEPARATOR reduce using rule 4 (object -> BEGIN_OBJECT END_OBJECT .)
    END_ARRAY       reduce using rule 4 (object -> BEGIN_OBJECT END_OBJECT .)
    END_OBJECT      reduce using rule 4 (object -> BEGIN_OBJECT END_OBJECT .)
    $end            reduce using rule 4 (object -> BEGIN_OBJECT END_OBJECT .)


state 17

    (3) object -> BEGIN_OBJECT members . END_OBJECT

    END_OBJECT      shift and go to state 28


state 18

    (5) members -> pair .
    (6) members -> pair . VALUE_SEPARATOR members

    END_OBJECT      reduce using rule 5 (members -> pair .)
    VALUE_SEPARATOR shift and go to state 29


state 19

    (7) pair -> string . NAME_SEPARATOR value

    NAME_SEPARATOR  shift and go to state 30


state 20

    (8) array -> BEGIN_ARRAY END_ARRAY .

    VALUE_SEPARATOR reduce using rule 8 (array -> BEGIN_ARRAY END_ARRAY .)
    END_OBJECT      reduce using rule 8 (array -> BEGIN_ARRAY END_ARRAY .)
    $end            reduce using rule 8 (array -> BEGIN_ARRAY END_ARRAY .)
    END_ARRAY       reduce using rule 8 (array -> BEGIN_ARRAY END_ARRAY .)


state 21

    (9) array -> BEGIN_ARRAY elements . END_ARRAY

    END_ARRAY       shift and go to state 31


state 22

    (28) string -> QUOTATION_MARK QUOTATION_MARK .

    VALUE_SEPARATOR reduce using rule 28 (string -> QUOTATION_MARK QUOTATION_MARK .)
    $end            reduce using rule 28 (string -> QUOTATION_MARK QUOTATION_MARK .)
    END_ARRAY       reduce using rule 28 (string -> QUOTATION_MARK QUOTATION_MARK .)
    NAME_SEPARATOR  reduce using rule 28 (string -> QUOTATION_MARK QUOTATION_MARK .)
    END_OBJECT      reduce using rule 28 (string -> QUOTATION_MARK QUOTATION_MARK .)


state 23

    (27) string -> QUOTATION_MARK STRING . QUOTATION_MARK

    QUOTATION_MARK  shift and go to state 32


state 24

    (18) integer -> MINUS DIGITS .

    DECIMAL_POINT   reduce using rule 18 (integer -> MINUS DIGITS .)
    E               reduce using rule 18 (integer -> MINUS DIGITS .)
    VALUE_SEPARATOR reduce using rule 18 (integer -> MINUS DIGITS .)
    $end            reduce using rule 18 (integer -> MINUS DIGITS .)
    END_OBJECT      reduce using rule 18 (integer -> MINUS DIGITS .)
    END_ARRAY       reduce using rule 18 (integer -> MINUS DIGITS .)


state 25

    (21) number -> integer E . DIGITS
    (22) number -> integer E . PLUS DIGITS
    (23) number -> integer E . MINUS DIGITS

    DIGITS          shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34


state 26

    (20) number -> integer DECIMAL_POINT . DIGITS
    (24) number -> integer DECIMAL_POINT . DIGITS E DIGITS
    (25) number -> integer DECIMAL_POINT . DIGITS E PLUS DIGITS
    (26) number -> integer DECIMAL_POINT . DIGITS E MINUS DIGITS

    DIGITS          shift and go to state 36


state 27

    (2) elements -> value VALUE_SEPARATOR . elements
    (1) elements -> . value
    (2) elements -> . value VALUE_SEPARATOR elements
    (10) value -> . string
    (11) value -> . FALSE
    (12) value -> . TRUE
    (13) value -> . NULL
    (14) value -> . number
    (15) value -> . object
    (16) value -> . array
    (27) string -> . QUOTATION_MARK STRING QUOTATION_MARK
    (28) string -> . QUOTATION_MARK QUOTATION_MARK
    (19) number -> . integer
    (20) number -> . integer DECIMAL_POINT DIGITS
    (21) number -> . integer E DIGITS
    (22) number -> . integer E PLUS DIGITS
    (23) number -> . integer E MINUS DIGITS
    (24) number -> . integer DECIMAL_POINT DIGITS E DIGITS
    (25) number -> . integer DECIMAL_POINT DIGITS E PLUS DIGITS
    (26) number -> . integer DECIMAL_POINT DIGITS E MINUS DIGITS
    (3) object -> . BEGIN_OBJECT members END_OBJECT
    (4) object -> . BEGIN_OBJECT END_OBJECT
    (8) array -> . BEGIN_ARRAY END_ARRAY
    (9) array -> . BEGIN_ARRAY elements END_ARRAY
    (17) integer -> . DIGITS
    (18) integer -> . MINUS DIGITS

    FALSE           shift and go to state 14
    TRUE            shift and go to state 7
    NULL            shift and go to state 6
    QUOTATION_MARK  shift and go to state 4
    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2
    DIGITS          shift and go to state 9
    MINUS           shift and go to state 8

    elements                       shift and go to state 37
    string                         shift and go to state 11
    object                         shift and go to state 12
    number                         shift and go to state 3
    value                          shift and go to state 15
    integer                        shift and go to state 13
    array                          shift and go to state 5

state 28

    (3) object -> BEGIN_OBJECT members END_OBJECT .

    VALUE_SEPARATOR reduce using rule 3 (object -> BEGIN_OBJECT members END_OBJECT .)
    END_ARRAY       reduce using rule 3 (object -> BEGIN_OBJECT members END_OBJECT .)
    END_OBJECT      reduce using rule 3 (object -> BEGIN_OBJECT members END_OBJECT .)
    $end            reduce using rule 3 (object -> BEGIN_OBJECT members END_OBJECT .)


state 29

    (6) members -> pair VALUE_SEPARATOR . members
    (5) members -> . pair
    (6) members -> . pair VALUE_SEPARATOR members
    (7) pair -> . string NAME_SEPARATOR value
    (27) string -> . QUOTATION_MARK STRING QUOTATION_MARK
    (28) string -> . QUOTATION_MARK QUOTATION_MARK

    QUOTATION_MARK  shift and go to state 4

    pair                           shift and go to state 18
    string                         shift and go to state 19
    members                        shift and go to state 38

state 30

    (7) pair -> string NAME_SEPARATOR . value
    (10) value -> . string
    (11) value -> . FALSE
    (12) value -> . TRUE
    (13) value -> . NULL
    (14) value -> . number
    (15) value -> . object
    (16) value -> . array
    (27) string -> . QUOTATION_MARK STRING QUOTATION_MARK
    (28) string -> . QUOTATION_MARK QUOTATION_MARK
    (19) number -> . integer
    (20) number -> . integer DECIMAL_POINT DIGITS
    (21) number -> . integer E DIGITS
    (22) number -> . integer E PLUS DIGITS
    (23) number -> . integer E MINUS DIGITS
    (24) number -> . integer DECIMAL_POINT DIGITS E DIGITS
    (25) number -> . integer DECIMAL_POINT DIGITS E PLUS DIGITS
    (26) number -> . integer DECIMAL_POINT DIGITS E MINUS DIGITS
    (3) object -> . BEGIN_OBJECT members END_OBJECT
    (4) object -> . BEGIN_OBJECT END_OBJECT
    (8) array -> . BEGIN_ARRAY END_ARRAY
    (9) array -> . BEGIN_ARRAY elements END_ARRAY
    (17) integer -> . DIGITS
    (18) integer -> . MINUS DIGITS

    FALSE           shift and go to state 14
    TRUE            shift and go to state 7
    NULL            shift and go to state 6
    QUOTATION_MARK  shift and go to state 4
    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2
    DIGITS          shift and go to state 9
    MINUS           shift and go to state 8

    string                         shift and go to state 11
    object                         shift and go to state 12
    number                         shift and go to state 3
    value                          shift and go to state 39
    integer                        shift and go to state 13
    array                          shift and go to state 5

state 31

    (9) array -> BEGIN_ARRAY elements END_ARRAY .

    VALUE_SEPARATOR reduce using rule 9 (array -> BEGIN_ARRAY elements END_ARRAY .)
    END_OBJECT      reduce using rule 9 (array -> BEGIN_ARRAY elements END_ARRAY .)
    $end            reduce using rule 9 (array -> BEGIN_ARRAY elements END_ARRAY .)
    END_ARRAY       reduce using rule 9 (array -> BEGIN_ARRAY elements END_ARRAY .)


state 32

    (27) string -> QUOTATION_MARK STRING QUOTATION_MARK .

    VALUE_SEPARATOR reduce using rule 27 (string -> QUOTATION_MARK STRING QUOTATION_MARK .)
    $end            reduce using rule 27 (string -> QUOTATION_MARK STRING QUOTATION_MARK .)
    END_ARRAY       reduce using rule 27 (string -> QUOTATION_MARK STRING QUOTATION_MARK .)
    NAME_SEPARATOR  reduce using rule 27 (string -> QUOTATION_MARK STRING QUOTATION_MARK .)
    END_OBJECT      reduce using rule 27 (string -> QUOTATION_MARK STRING QUOTATION_MARK .)


state 33

    (21) number -> integer E DIGITS .

    VALUE_SEPARATOR reduce using rule 21 (number -> integer E DIGITS .)
    END_OBJECT      reduce using rule 21 (number -> integer E DIGITS .)
    END_ARRAY       reduce using rule 21 (number -> integer E DIGITS .)
    $end            reduce using rule 21 (number -> integer E DIGITS .)


state 34

    (23) number -> integer E MINUS . DIGITS

    DIGITS          shift and go to state 40


state 35

    (22) number -> integer E PLUS . DIGITS

    DIGITS          shift and go to state 41


state 36

    (20) number -> integer DECIMAL_POINT DIGITS .
    (24) number -> integer DECIMAL_POINT DIGITS . E DIGITS
    (25) number -> integer DECIMAL_POINT DIGITS . E PLUS DIGITS
    (26) number -> integer DECIMAL_POINT DIGITS . E MINUS DIGITS

    VALUE_SEPARATOR reduce using rule 20 (number -> integer DECIMAL_POINT DIGITS .)
    END_OBJECT      reduce using rule 20 (number -> integer DECIMAL_POINT DIGITS .)
    END_ARRAY       reduce using rule 20 (number -> integer DECIMAL_POINT DIGITS .)
    $end            reduce using rule 20 (number -> integer DECIMAL_POINT DIGITS .)
    E               shift and go to state 42


state 37

    (2) elements -> value VALUE_SEPARATOR elements .

    $end            reduce using rule 2 (elements -> value VALUE_SEPARATOR elements .)
    END_ARRAY       reduce using rule 2 (elements -> value VALUE_SEPARATOR elements .)


state 38

    (6) members -> pair VALUE_SEPARATOR members .

    END_OBJECT      reduce using rule 6 (members -> pair VALUE_SEPARATOR members .)


state 39

    (7) pair -> string NAME_SEPARATOR value .

    VALUE_SEPARATOR reduce using rule 7 (pair -> string NAME_SEPARATOR value .)
    END_OBJECT      reduce using rule 7 (pair -> string NAME_SEPARATOR value .)


state 40

    (23) number -> integer E MINUS DIGITS .

    VALUE_SEPARATOR reduce using rule 23 (number -> integer E MINUS DIGITS .)
    END_OBJECT      reduce using rule 23 (number -> integer E MINUS DIGITS .)
    END_ARRAY       reduce using rule 23 (number -> integer E MINUS DIGITS .)
    $end            reduce using rule 23 (number -> integer E MINUS DIGITS .)


state 41

    (22) number -> integer E PLUS DIGITS .

    VALUE_SEPARATOR reduce using rule 22 (number -> integer E PLUS DIGITS .)
    END_OBJECT      reduce using rule 22 (number -> integer E PLUS DIGITS .)
    END_ARRAY       reduce using rule 22 (number -> integer E PLUS DIGITS .)
    $end            reduce using rule 22 (number -> integer E PLUS DIGITS .)


state 42

    (24) number -> integer DECIMAL_POINT DIGITS E . DIGITS
    (25) number -> integer DECIMAL_POINT DIGITS E . PLUS DIGITS
    (26) number -> integer DECIMAL_POINT DIGITS E . MINUS DIGITS

    DIGITS          shift and go to state 43
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45


state 43

    (24) number -> integer DECIMAL_POINT DIGITS E DIGITS .

    VALUE_SEPARATOR reduce using rule 24 (number -> integer DECIMAL_POINT DIGITS E DIGITS .)
    END_OBJECT      reduce using rule 24 (number -> integer DECIMAL_POINT DIGITS E DIGITS .)
    END_ARRAY       reduce using rule 24 (number -> integer DECIMAL_POINT DIGITS E DIGITS .)
    $end            reduce using rule 24 (number -> integer DECIMAL_POINT DIGITS E DIGITS .)


state 44

    (25) number -> integer DECIMAL_POINT DIGITS E PLUS . DIGITS

    DIGITS          shift and go to state 46


state 45

    (26) number -> integer DECIMAL_POINT DIGITS E MINUS . DIGITS

    DIGITS          shift and go to state 47


state 46

    (25) number -> integer DECIMAL_POINT DIGITS E PLUS DIGITS .

    VALUE_SEPARATOR reduce using rule 25 (number -> integer DECIMAL_POINT DIGITS E PLUS DIGITS .)
    END_OBJECT      reduce using rule 25 (number -> integer DECIMAL_POINT DIGITS E PLUS DIGITS .)
    END_ARRAY       reduce using rule 25 (number -> integer DECIMAL_POINT DIGITS E PLUS DIGITS .)
    $end            reduce using rule 25 (number -> integer DECIMAL_POINT DIGITS E PLUS DIGITS .)


state 47

    (26) number -> integer DECIMAL_POINT DIGITS E MINUS DIGITS .

    VALUE_SEPARATOR reduce using rule 26 (number -> integer DECIMAL_POINT DIGITS E MINUS DIGITS .)
    END_OBJECT      reduce using rule 26 (number -> integer DECIMAL_POINT DIGITS E MINUS DIGITS .)
    END_ARRAY       reduce using rule 26 (number -> integer DECIMAL_POINT DIGITS E MINUS DIGITS .)
    $end            reduce using rule 26 (number -> integer DECIMAL_POINT DIGITS E MINUS DIGITS .)

