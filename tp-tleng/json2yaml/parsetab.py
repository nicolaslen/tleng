
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BEGIN_ARRAY BEGIN_OBJECT END_ARRAY END_OBJECT NAME_SEPARATOR VALUE_SEPARATOR QUOTATION_MARK FALSE TRUE NULL DECIMAL_POINT DIGITS E MINUS PLUS STRING UNICODE_HEXelements : valueelements : value VALUE_SEPARATOR elementsobject : BEGIN_OBJECT members END_OBJECTobject : BEGIN_OBJECT END_OBJECTmembers : pairmembers : pair VALUE_SEPARATOR memberspair : string NAME_SEPARATOR valuearray : BEGIN_ARRAY END_ARRAYarray : BEGIN_ARRAY elements END_ARRAYvalue : stringvalue : FALSEvalue : TRUEvalue : NULLvalue : numbervalue : objectvalue : arrayinteger : DIGITSinteger : MINUS DIGITSnumber : integernumber : integer DECIMAL_POINT DIGITSnumber : integer E DIGITSnumber : integer E PLUS DIGITSnumber : integer E MINUS DIGITSnumber : integer DECIMAL_POINT DIGITS E DIGITSnumber : integer DECIMAL_POINT DIGITS E PLUS DIGITSnumber : integer DECIMAL_POINT DIGITS E MINUS DIGITSstring : QUOTATION_MARK STRING QUOTATION_MARKstring : QUOTATION_MARK QUOTATION_MARK'
    
_lr_action_items = {'DIGITS':([0,2,8,25,26,27,30,34,35,42,44,45,],[9,9,24,33,36,9,9,40,41,43,46,47,]),'VALUE_SEPARATOR':([3,5,6,7,9,11,12,13,14,15,16,18,20,22,24,28,31,32,33,36,39,40,41,43,46,47,],[-14,-16,-13,-12,-17,-10,-15,-19,-11,27,-4,29,-8,-28,-18,-3,-9,-27,-21,-20,-7,-23,-22,-24,-25,-26,]),'BEGIN_OBJECT':([0,2,27,30,],[1,1,1,1,]),'FALSE':([0,2,27,30,],[14,14,14,14,]),'END_OBJECT':([1,3,5,6,7,9,11,12,13,14,16,17,18,20,22,24,28,31,32,33,36,38,39,40,41,43,46,47,],[16,-14,-16,-13,-12,-17,-10,-15,-19,-11,-4,28,-5,-8,-28,-18,-3,-9,-27,-21,-20,-6,-7,-23,-22,-24,-25,-26,]),'BEGIN_ARRAY':([0,2,27,30,],[2,2,2,2,]),'NAME_SEPARATOR':([19,22,32,],[30,-28,-27,]),'E':([9,13,24,36,],[-17,25,-18,42,]),'PLUS':([25,42,],[35,44,]),'DECIMAL_POINT':([9,13,24,],[-17,26,-18,]),'QUOTATION_MARK':([0,1,2,4,23,27,29,30,],[4,4,4,22,32,4,4,4,]),'END_ARRAY':([2,3,5,6,7,9,11,12,13,14,15,16,20,21,22,24,28,31,32,33,36,37,40,41,43,46,47,],[20,-14,-16,-13,-12,-17,-10,-15,-19,-11,-1,-4,-8,31,-28,-18,-3,-9,-27,-21,-20,-2,-23,-22,-24,-25,-26,]),'STRING':([4,],[23,]),'NULL':([0,2,27,30,],[6,6,6,6,]),'TRUE':([0,2,27,30,],[7,7,7,7,]),'MINUS':([0,2,25,27,30,42,],[8,8,34,8,8,45,]),'$end':([3,5,6,7,9,10,11,12,13,14,15,16,20,22,24,28,31,32,33,36,37,40,41,43,46,47,],[-14,-16,-13,-12,-17,0,-10,-15,-19,-11,-1,-4,-8,-28,-18,-3,-9,-27,-21,-20,-2,-23,-22,-24,-25,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'elements':([0,2,27,],[10,21,37,]),'string':([0,1,2,27,29,30,],[11,19,11,11,19,11,]),'object':([0,2,27,30,],[12,12,12,12,]),'number':([0,2,27,30,],[3,3,3,3,]),'value':([0,2,27,30,],[15,15,15,39,]),'members':([1,29,],[17,38,]),'pair':([1,29,],[18,18,]),'integer':([0,2,27,30,],[13,13,13,13,]),'array':([0,2,27,30,],[5,5,5,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> elements","S'",1,None,None,None),
  ('elements -> value','elements',1,'p_expression_elements_value','parser.py',9),
  ('elements -> value VALUE_SEPARATOR elements','elements',3,'p_expression_elements_list','parser.py',13),
  ('object -> BEGIN_OBJECT members END_OBJECT','object',3,'p_expression_object','parser.py',18),
  ('object -> BEGIN_OBJECT END_OBJECT','object',2,'p_expression_object_empty','parser.py',22),
  ('members -> pair','members',1,'p_expression_members','parser.py',27),
  ('members -> pair VALUE_SEPARATOR members','members',3,'p_expression_members_list','parser.py',31),
  ('pair -> string NAME_SEPARATOR value','pair',3,'p_expression_pair','parser.py',36),
  ('array -> BEGIN_ARRAY END_ARRAY','array',2,'p_expression_array_empty','parser.py',41),
  ('array -> BEGIN_ARRAY elements END_ARRAY','array',3,'p_expression_array_list','parser.py',45),
  ('value -> string','value',1,'p_expression_value_string','parser.py',50),
  ('value -> FALSE','value',1,'p_expression_value_false','parser.py',54),
  ('value -> TRUE','value',1,'p_expression_value_true','parser.py',58),
  ('value -> NULL','value',1,'p_expression_value_null','parser.py',62),
  ('value -> number','value',1,'p_expression_value_number','parser.py',66),
  ('value -> object','value',1,'p_expression_value_object','parser.py',70),
  ('value -> array','value',1,'p_expression_value_array','parser.py',74),
  ('integer -> DIGITS','integer',1,'p_expression_integer','parser.py',79),
  ('integer -> MINUS DIGITS','integer',2,'p_expression_integer_negative','parser.py',83),
  ('number -> integer','number',1,'p_expression_number','parser.py',88),
  ('number -> integer DECIMAL_POINT DIGITS','number',3,'p_expression_frac','parser.py',92),
  ('number -> integer E DIGITS','number',3,'p_expression_exp','parser.py',96),
  ('number -> integer E PLUS DIGITS','number',4,'p_expression_exp_positive','parser.py',100),
  ('number -> integer E MINUS DIGITS','number',4,'p_expression_exp_negative','parser.py',104),
  ('number -> integer DECIMAL_POINT DIGITS E DIGITS','number',5,'p_expression_frac_exp','parser.py',108),
  ('number -> integer DECIMAL_POINT DIGITS E PLUS DIGITS','number',6,'p_expression_frac_exp_positive','parser.py',112),
  ('number -> integer DECIMAL_POINT DIGITS E MINUS DIGITS','number',6,'p_expression_frac_exp_negative','parser.py',116),
  ('string -> QUOTATION_MARK STRING QUOTATION_MARK','string',3,'p_expression_string','parser.py',121),
  ('string -> QUOTATION_MARK QUOTATION_MARK','string',2,'p_expression_string_empty','parser.py',125),
]
